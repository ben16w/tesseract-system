---

- name: Ensure tesseract user exists.
  #register: created_tesseract_user
  user:
    name: "{{ tesseract_username }}"


- name: Makes sure samba path exists
  ansible.builtin.file:
    path: "{{ samba_path }}"
    state: directory
    mode: 0755

- name: Find all directoies in samba path.
  find:
    paths: "{{ samba_path }}"
    recurse: no
    file_type: directory
  register: samaba_dirs

- name: Install software.
  apt:
    pkg:
      - samba
      - samba-common-bin
      - acl

- name: Ensure samba is started.
  ansible.builtin.service:
    name: smbd
    state: started
    enabled: true

- name: Ensure nmbd is stopped.
  ansible.builtin.service:
    name: nmbd
    state: stopped
    enabled: false

- name: Generate samba config.
  notify: restart samba
  ansible.builtin.template:
    src: smb.conf.j2
    dest: /etc/samba/smb.conf
    owner: root
    group: root
    mode: 0644

- name: Make sure share directories exist and are owned by tesseract.
  notify: restart samba
  with_items: "{{ samaba_dirs.files }}"
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ tesseract_username }}"
    group: "{{ tesseract_username }}"
    recurse: true

- name: Set ACL for tesseract user.
  notify: restart samba
  with_items: "{{ samaba_dirs.files }}"
  ansible.posix.acl:
    path: "{{ item.path }}"
    entity: "{{ tesseract_username }}"
    etype: user
    permissions: rwx
    recursive: true
    state: present

- name: Create tesseract samba user if they don't exist yet # Might not update if password changes
  shell: >
    set -o nounset -o pipefail -o errexit &&
    (pdbedit --user={{ tesseract_username }} 2>&1 > /dev/null) \
    || (echo {{ samba_password }}; echo {{ samba_password }}) \
    | smbpasswd -s -a {{ tesseract_username }}
  args:
    executable: /bin/bash
  no_log: true
  register: create_samba_tesseract
  changed_when: "'Added user' in create_samba_tesseract.stdout"
