#!/usr/bin/env bash

####  CONFIGURATION  ####

HDD_BACKUP_SOURCE_PATH=/media/storage/
CACHE="${1}"
BACKING="${2}"
PERCENTAGE=${3}
N=${3}
TMP_DIR="/tmp"

function usage()
{
    echo "Usage: $(basename "$0") <cache-fs> <backing-pool> <days-old> <percentage>"
}


####  COMMON CODE  ####

LOG_FILE=""
EMAIL_USERNAME=""
SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)

# Function to exit the script with an error message.
function error_exit()
{
    echo "ERROR: ${1:-"Unknown Error"}"
    log "ERROR: ${1:-"Unknown Error"}"

    if [ "${EMAIL_USERNAME}" != "" ]; then

msmtp -t <<EOF
To: ${EMAIL_USERNAME}
From: ${EMAIL_USERNAME}
Subject: $(hostname): Script $0 has encountered an error - ${1:-"Unknown Error"}

Hostname: $(hostname)
Logs:
$(tail -n 10 "$LOG_FILE")
EOF

    else
        info "No email sent. EMAIL_USERNAME not set."
    fi
    exit 1
}

# Function to print an informational message.
function info()
{
    echo "INFO: ${1}"
    log "INFO: ${1}"
}

function log()
{
    if [ "${LOG_FILE}" != "" ]; then
        echo "$(date '+%F %T.%3N') ${1}" >> "$LOG_FILE"
    fi
}

# Source environment variables from the .env file if it exists
if [ -f "$SCRIPT_DIR"/.env ]; then
    source "$SCRIPT_DIR"/.env || exit 1
fi

# Check if script is running as root
if [[ $EUID -ne 0 ]]; then
    error_exit "Script $0 must be run as root" 
fi

# Display usage information if -h or --help option is provided
if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
    usage
    exit 0
fi


####  MAIN CODE  ####

# Need to check that rsync is installed
if ! command -v rsync >/dev/null 2>&1; then
    error_exit "Required command rsync is not installed or not available in the PATH"
fi

# Check that a UUID argument has been given.
if [ $# -lt 1 ]; then
    usage
    error_exit "No UUID argument supplied."
fi

# Check that storage directory exists.
if [ ! -d "$HDD_BACKUP_SOURCE_PATH" ]; then
    error_exit "Source path not found."
fi

# Check that storage directory has files in
if [ ! "$(ls -A "$HDD_BACKUP_SOURCE_PATH")" ]; then
    error_exit "Source path $HDD_BACKUP_SOURCE_PATH is empty. Nothing to backup."
fi






set -o errexit
find "${CACHE}" -type f -atime "+${N}" -printf '%P\n' > "${TMP_DIR}/.files"
while [ "$(df --output=pcent "${CACHE}" | grep -v Use | cut -d'%' -f1)" -gt "${PERCENTAGE}" ]
do
    FILE=$(find "${CACHE}" -type f -printf '%A@ %P\n' | \
        sort | \
        head -n 1 | \
        cut -d' ' -f2-)
    test -n "${FILE}"
    rsync -axqHAXWESR --preallocate --remove-source-files "${CACHE}/./${FILE}" "${BACKING}/"
done










info "Backup finished"
