---

- name: Assert that all required inputs have been provided.
  ansible.builtin.assert:
    that:
      - mergerfs_path is not none
      - mergerfs_version is not none

- name: Install fuse.
  ansible.builtin.package:
    name: fuse
    state: present
    update_cache: true

- name: Setting architecture to amd64.
  ansible.builtin.set_fact:
    download_arch: "amd64"
  when: '"x86_64" in ansible_architecture'

- name: Setting architecture to arm64.
  ansible.builtin.set_fact:
    download_arch: "arm64"
  when: '"armv" in ansible_architecture or "aarch" in ansible_architecture'

- name: Setting architecture to armhf.
  ansible.builtin.set_fact:
    download_arch: "armhf"
  when: '"armv7l" in ansible_architecture'

- name: Downloading mergerfs .deb package.
  ansible.builtin.get_url:
    url: "https://github.com/trapexit/mergerfs/releases/download/\
      {{ mergerfs_version }}/\
      mergerfs_{{ mergerfs_version }}.{{ ansible_distribution }}-\
      {{ ansible_distribution_release }}_{{ download_arch }}.deb"
    dest: /tmp/mergerfs.deb
    mode: '0644'

- name: Install mergerfs from download .deb package.
  ansible.builtin.apt:
    deb: /tmp/mergerfs.deb

- name: Make sure mountpoint exists.
  ansible.builtin.file:
    path: "{{ mergerfs_path }}"
    state: directory
    mode: '0755'

- name: Make sure disk paths exist.
  loop: "{{ mergerfs_disks }}"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'

- name: Mount mergerfs filesystems
  when: mergerfs_disks | length > 0
  ansible.posix.mount:
    fstype: fuse.mergerfs
    src: "{{ ':'.join(mergerfs_disks) }}"
    path: "{{ mergerfs_path }}"
    opts: "minfreespace={{ mergerfs_min_free_space }},\
      fsname={{ mergerfs_path | basename }},\
      allow_other,\
      use_ino,\
      cache.files=partial,\
      dropcacheonclose=true,\
      category.create=mfs,\
      moveonenospc=true,\
      noauto"
    state: mounted
