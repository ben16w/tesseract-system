---

- name: Assert that all required inputs have been provided.
  ansible.builtin.assert:
    that:
      - snapraid_version is not none
      - email_username is not none
      - email_host is not none
      - email_port is not none
      - email_password is not none
      - tesseract_hostname is not none

- name: Install C Compiler with package manager.
  ansible.builtin.package:
    name:
      - gcc
      - make
      - git
      - cron
    state: present
    update_cache: true

- name: Ensure snapraid directory exists.
  ansible.builtin.file:
    path: /var/snapraid/
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Check if snapraid is installed.
  ansible.builtin.stat:
    path: /usr/local/bin/snapraid
  register: is_snapraid_installed

- name: When snapraid is not installed.
  when: not is_snapraid_installed.stat.exists
  block:

    - name: Download and extract snapraid archive into tmp directory.
      ansible.builtin.unarchive:
        src: "https://github.com/amadvance/snapraid/\
          releases/download/v{{ snapraid_version }}/snapraid-{{ snapraid_version }}.tar.gz"
        dest: /tmp
        remote_src: true
        creates: /tmp/snapraid-{{ snapraid_version }}
      register: download_snapraid
      retries: 5
      delay: 10
      until: download_snapraid is succeeded

    - name: Configure Snapraid install.
      ansible.builtin.command:
        cmd: ./configure
        chdir: /tmp/snapraid-{{ snapraid_version }}
        creates: /tmp/snapraid-{{ snapraid_version }}/Makefile

    - name: Run make Snapraid.
      ansible.builtin.command:
        cmd: make
        chdir: /tmp/snapraid-{{ snapraid_version }}
        creates: /tmp/snapraid-{{ snapraid_version }}/snapraid

    - name: Run make check Snapraid.
      ansible.builtin.command:
        cmd: make check
        chdir: /tmp/snapraid-{{ snapraid_version }}
        creates: /tmp/snapraid-{{ snapraid_version }}/test.log

    - name: Run make install Snapraid.
      ansible.builtin.command:
        cmd: make install
        chdir: /tmp/snapraid-{{ snapraid_version }}
        creates: /usr/local/bin/snapraid

- name: Ensure snapraid-runner directory exists.
  ansible.builtin.file:
    path: /opt/snapraid-runner
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Clone snapraid-runner git repository.
  ansible.builtin.git:
    repo: https://github.com/Chronial/snapraid-runner.git
    dest: /opt/snapraid-runner
    version: master
  register: download_snapraid_runner
  retries: 5
  delay: 10
  until: download_snapraid_runner is succeeded

- name: When data disks and parity disks are not empty.
  when: snapraid_data_disks | length > 0 and snapraid_parity_disks | length > 0
  block:

    - name: Template snapraid configuration file.
      ansible.builtin.template:
        src: templates/snapraid.conf.j2
        dest: /etc/snapraid.conf
        owner: root
        group: root
        mode: '0644'

    - name: Template snapraid-runner configuration file.
      ansible.builtin.template:
        src: templates/snapraid-runner.conf.j2
        dest: /opt/snapraid-runner/snapraid-runner.conf
        owner: root
        group: root
        mode: '0644'

    - name: Make sure data disks paths exist.
      loop: "{{ snapraid_data_disks }}"
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'

    - name: Make sure parity disks paths exist.
      loop: "{{ snapraid_parity_disks }}"
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'

    - name: Add cron job for snapraid-runner.
      ansible.builtin.cron:
        name: "Snapraid runner."
        minute: "0"
        hour: "{{ snapraid_cron_hour }}"
        job: >
          python3 /opt/snapraid-runner/snapraid-runner.py
          --conf /opt/snapraid-runner/snapraid-runner.conf
